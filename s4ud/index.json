{
  "api/S4UDashboard.AlertService.html": {
    "href": "api/S4UDashboard.AlertService.html",
    "title": "Class AlertService | Sensing4U Dashboard",
    "summary": "Class AlertService Namespace S4UDashboard Assembly S4UDashboard.dll public class AlertService Inheritance object AlertService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Alert(string?, string?, string?) public void Alert(string? title, string? header, string? message) Parameters title string header string message string PopupWithCancel(string?, string?, string?, IEnumerable<string>) public Task<string?> PopupWithCancel(string? title, string? header, string? message, IEnumerable<string> buttons) Parameters title string header string message string buttons IEnumerable<string> Returns Task<string>"
  },
  "api/S4UDashboard.App.html": {
    "href": "api/S4UDashboard.App.html",
    "title": "Class App | Sensing4U Dashboard",
    "summary": "Class App Namespace S4UDashboard Assembly S4UDashboard.dll public class App : Application, INotifyPropertyChanged, IDataContextProvider, IGlobalDataTemplates, IDataTemplateHost, IGlobalStyles, IStyleHost, IThemeVariantHost, IResourceHost, IResourceNode, IApplicationPlatformEvents, IOptionalFeatureProvider Inheritance object AvaloniaObject Application App Implements INotifyPropertyChanged IDataContextProvider IGlobalDataTemplates IDataTemplateHost IGlobalStyles IStyleHost IThemeVariantHost IResourceHost IResourceNode IApplicationPlatformEvents IOptionalFeatureProvider Inherited Members Application.DataContextProperty Application.ActualThemeVariantProperty Application.RequestedThemeVariantProperty Application.NameProperty Application.TryGetResource(object, ThemeVariant, out object) Application.RegisterServices() Application.TryGetFeature(Type) Application.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) Application.DataContext Application.RequestedThemeVariant Application.ActualThemeVariant Application.Current Application.DataTemplates Application.Resources Application.Styles Application.ApplicationLifetime Application.PlatformSettings Application.Name Application.ResourcesChanged Application.UrlsOpened Application.ActualThemeVariantChanged AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IBinding) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] AvaloniaObject.PropertyChanged object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Initialize() Initializes the application by loading XAML etc. public override void Initialize() OnFrameworkInitializationCompleted() public override void OnFrameworkInitializationCompleted()"
  },
  "api/S4UDashboard.Controls.EnumBinding.html": {
    "href": "api/S4UDashboard.Controls.EnumBinding.html",
    "title": "Class EnumBinding | Sensing4U Dashboard",
    "summary": "Class EnumBinding Namespace S4UDashboard.Controls Assembly S4UDashboard.dll public class EnumBinding : MarkupExtension Inheritance object MarkupExtension EnumBinding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EnumBinding(Type) public EnumBinding(Type type) Parameters type Type Methods ProvideValue(IServiceProvider) public override CompiledBindingExtension ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Returns CompiledBindingExtension"
  },
  "api/S4UDashboard.Controls.HKMenu.html": {
    "href": "api/S4UDashboard.Controls.HKMenu.html",
    "title": "Class HKMenu | Sensing4U Dashboard",
    "summary": "Class HKMenu Namespace S4UDashboard.Controls Assembly S4UDashboard.dll public class HKMenu : Menu, INotifyPropertyChanged, IDataContextProvider, IThemeVariantHost, IResourceHost, IResourceNode, IStyleHost, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, INamed, IDataTemplateHost, ISetterValue, IChildIndexProvider, IFocusScope, IInputElement, ILogical Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control TemplatedControl ItemsControl SelectingItemsControl MenuBase Menu HKMenu Implements INotifyPropertyChanged IDataContextProvider IThemeVariantHost IResourceHost IResourceNode IStyleHost ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable INamed IDataTemplateHost ISetterValue IChildIndexProvider IFocusScope IInputElement ILogical Inherited Members Menu.Close() Menu.Open() Menu.PrepareContainerForItemOverride(Control, object, int) MenuBase.IsOpenProperty MenuBase.OpenedEvent MenuBase.ClosedEvent MenuBase.CreateContainerForItemOverride(object, int, object) MenuBase.NeedsContainerOverride(object, int, out object) MenuBase.OnKeyDown(KeyEventArgs) MenuBase.OnSubmenuOpened(RoutedEventArgs) MenuBase.IsOpen MenuBase.InteractionHandler MenuBase.Opened MenuBase.Closed SelectingItemsControl.AutoScrollToSelectedItemProperty SelectingItemsControl.SelectedIndexProperty SelectingItemsControl.SelectedItemProperty SelectingItemsControl.SelectedValueProperty SelectingItemsControl.SelectedValueBindingProperty SelectingItemsControl.SelectedItemsProperty SelectingItemsControl.SelectionProperty SelectingItemsControl.SelectionModeProperty SelectingItemsControl.IsSelectedProperty SelectingItemsControl.IsTextSearchEnabledProperty SelectingItemsControl.IsSelectedChangedEvent SelectingItemsControl.SelectionChangedEvent SelectingItemsControl.WrapSelectionProperty SelectingItemsControl.BeginInit() SelectingItemsControl.EndInit() SelectingItemsControl.GetIsSelected(Control) SelectingItemsControl.SetIsSelected(Control, bool) SelectingItemsControl.GetContainerFromEventSource(object) SelectingItemsControl.OnApplyTemplate(TemplateAppliedEventArgs) SelectingItemsControl.ContainerForItemPreparedOverride(Control, object, int) SelectingItemsControl.ContainerIndexChangedOverride(Control, int, int) SelectingItemsControl.ClearContainerForItemOverride(Control) SelectingItemsControl.OnDataContextBeginUpdate() SelectingItemsControl.OnDataContextEndUpdate() SelectingItemsControl.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) SelectingItemsControl.OnInitialized() SelectingItemsControl.OnTextInput(TextInputEventArgs) SelectingItemsControl.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) SelectingItemsControl.MoveSelection(NavigationDirection, bool, bool) SelectingItemsControl.MoveSelection(Control, NavigationDirection, bool, bool) SelectingItemsControl.UpdateSelection(int, bool, bool, bool, bool, bool) SelectingItemsControl.UpdateSelection(Control, bool, bool, bool, bool, bool) SelectingItemsControl.UpdateSelectionFromEventSource(object, bool, bool, bool, bool, bool) SelectingItemsControl.AutoScrollToSelectedItem SelectingItemsControl.SelectedIndex SelectingItemsControl.SelectedItem SelectingItemsControl.SelectedValueBinding SelectingItemsControl.SelectedValue SelectingItemsControl.SelectedItems SelectingItemsControl.Selection SelectingItemsControl.IsTextSearchEnabled SelectingItemsControl.WrapSelection SelectingItemsControl.SelectionMode SelectingItemsControl.AlwaysSelected SelectingItemsControl.SelectionChanged ItemsControl.ItemContainerThemeProperty ItemsControl.ItemCountProperty ItemsControl.ItemsPanelProperty ItemsControl.ItemsSourceProperty ItemsControl.ItemTemplateProperty ItemsControl.DisplayMemberBindingProperty ItemsControl.ContainerFromIndex(int) ItemsControl.ContainerFromItem(object) ItemsControl.IndexFromContainer(Control) ItemsControl.ItemFromContainer(Control) ItemsControl.GetRealizedContainers() ItemsControl.ScrollIntoView(int) ItemsControl.ScrollIntoView(object) ItemsControl.ItemsControlFromItemContainer(Control) ItemsControl.NeedsContainer<T>(object, out object) ItemsControl.OnGotFocus(GotFocusEventArgs) ItemsControl.OnCreateAutomationPeer() ItemsControl.RefreshContainers() ItemsControl.GetNextControl(INavigableContainer, NavigationDirection, IInputElement, bool) ItemsControl.DisplayMemberBinding ItemsControl.ItemContainerGenerator ItemsControl.Items ItemsControl.ItemContainerTheme ItemsControl.ItemCount ItemsControl.ItemsPanel ItemsControl.ItemsSource ItemsControl.ItemTemplate ItemsControl.Presenter ItemsControl.ItemsPanelRoot ItemsControl.ItemsView ItemsControl.DefaultRecycleKey ItemsControl.ContainerPrepared ItemsControl.ContainerIndexChanged ItemsControl.ContainerClearing TemplatedControl.BackgroundProperty TemplatedControl.BackgroundSizingProperty TemplatedControl.BorderBrushProperty TemplatedControl.BorderThicknessProperty TemplatedControl.CornerRadiusProperty TemplatedControl.FontFamilyProperty TemplatedControl.FontFeaturesProperty TemplatedControl.FontSizeProperty TemplatedControl.FontStyleProperty TemplatedControl.FontWeightProperty TemplatedControl.FontStretchProperty TemplatedControl.ForegroundProperty TemplatedControl.PaddingProperty TemplatedControl.TemplateProperty TemplatedControl.IsTemplateFocusTargetProperty TemplatedControl.TemplateAppliedEvent TemplatedControl.GetIsTemplateFocusTarget(Control) TemplatedControl.SetIsTemplateFocusTarget(Control, bool) TemplatedControl.ApplyTemplate() TemplatedControl.GetTemplateFocusTarget() TemplatedControl.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnTemplateChanged(AvaloniaPropertyChangedEventArgs) TemplatedControl.Background TemplatedControl.BackgroundSizing TemplatedControl.BorderBrush TemplatedControl.BorderThickness TemplatedControl.CornerRadius TemplatedControl.FontFamily TemplatedControl.FontFeatures TemplatedControl.FontSize TemplatedControl.FontStyle TemplatedControl.FontWeight TemplatedControl.FontStretch TemplatedControl.Foreground TemplatedControl.Padding TemplatedControl.Template TemplatedControl.TemplateApplied Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.MeasureCore(Size) Layoutable.MeasureOverride(Size) Layoutable.ArrangeCore(Rect) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.Render(DrawingContext) Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.InvalidateMirrorTransform() Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.BypassFlowDirectionPolicies Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnDataContextChanged(EventArgs) StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IBinding) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] AvaloniaObject.PropertyChanged object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties StyleKeyOverride Gets the type by which the element is styled. protected override Type StyleKeyOverride { get; } Property Value Type Remarks Usually controls are styled by their own type, but there are instances where you want an element to be styled by its base type, e.g. creating SpecialButton that derives from Button and adds extra functionality but is still styled as a regular Button. Override this property to change the style for a control class, returning the type that you wish the elements to be styled as. Methods OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) Called when the control is added to a rooted visual tree. protected override void OnAttachedToVisualTree(VisualTreeAttachmentEventArgs e) Parameters e VisualTreeAttachmentEventArgs The event args. OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Called when the control is removed from a rooted visual tree. protected override void OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs e) Parameters e VisualTreeAttachmentEventArgs The event args."
  },
  "api/S4UDashboard.Controls.ThresholdColourizerMultiConverter.html": {
    "href": "api/S4UDashboard.Controls.ThresholdColourizerMultiConverter.html",
    "title": "Class ThresholdColourizerMultiConverter | Sensing4U Dashboard",
    "summary": "Class ThresholdColourizerMultiConverter Namespace S4UDashboard.Controls Assembly S4UDashboard.dll public class ThresholdColourizerMultiConverter : IMultiValueConverter Inheritance object ThresholdColourizerMultiConverter Implements IMultiValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Convert(IList<object?>, Type, object?, CultureInfo) Converts multi-binding inputs to a final value. public object? Convert(IList<object?> values, Type targetType, object? parameter, CultureInfo culture) Parameters values IList<object> The values to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return Avalonia.AvaloniaProperty.UnsetValue. Any exception thrown will be treated as an application exception."
  },
  "api/S4UDashboard.Controls.html": {
    "href": "api/S4UDashboard.Controls.html",
    "title": "Namespace S4UDashboard.Controls | Sensing4U Dashboard",
    "summary": "Namespace S4UDashboard.Controls Classes EnumBinding HKMenu ThresholdColourizerMultiConverter"
  },
  "api/S4UDashboard.Model.AnnotatedDataModel.html": {
    "href": "api/S4UDashboard.Model.AnnotatedDataModel.html",
    "title": "Struct AnnotatedDataModel | Sensing4U Dashboard",
    "summary": "Struct AnnotatedDataModel Namespace S4UDashboard.Model Assembly S4UDashboard.dll Represents the components of a dataset which may be updated by the program. public readonly record struct AnnotatedDataModel : IEquatable<AnnotatedDataModel> Implements IEquatable<AnnotatedDataModel> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties AnnotatedName public string? AnnotatedName { get; init; } Property Value string LowerThreshold public double? LowerThreshold { get; init; } Property Value double? UpperThreshold public double? UpperThreshold { get; init; } Property Value double?"
  },
  "api/S4UDashboard.Model.CalculatedDataModel.html": {
    "href": "api/S4UDashboard.Model.CalculatedDataModel.html",
    "title": "Struct CalculatedDataModel | Sensing4U Dashboard",
    "summary": "Struct CalculatedDataModel Namespace S4UDashboard.Model Assembly S4UDashboard.dll Represents the components of a dataset which can be derived from the sensor data. public readonly record struct CalculatedDataModel : IEquatable<CalculatedDataModel> Implements IEquatable<CalculatedDataModel> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Maximum public required double Maximum { get; init; } Property Value double Mean public required double Mean { get; init; } Property Value double Minimum public required double Minimum { get; init; } Property Value double"
  },
  "api/S4UDashboard.Model.DataProcessing.html": {
    "href": "api/S4UDashboard.Model.DataProcessing.html",
    "title": "Class DataProcessing | Sensing4U Dashboard",
    "summary": "Class DataProcessing Namespace S4UDashboard.Model Assembly S4UDashboard.dll public class DataProcessing Inheritance object DataProcessing Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Datasets public readonly Dictionary<ILocation, ReactiveCell<DatasetModel>> Datasets Field Value Dictionary<ILocation, ReactiveCell<DatasetModel>> Instance public static readonly DataProcessing Instance Field Value DataProcessing Methods AddSampleDataset(AnnotatedDataModel, SensorDataModel) Creates a dataset from annotated data and sensor data, adds it to the currently loaded datasets with a new unnamed location, and returns the new location. public ILocation AddSampleDataset(AnnotatedDataModel annotatedData, SensorDataModel sensorData) Parameters annotatedData AnnotatedDataModel The annotated data in the new dataset. sensorData SensorDataModel The sensor data in the new dataset. Returns ILocation The location of the newly created dataset. CalculateAuxilliaryData(SensorDataModel) Given sensor data, calculates the auxilliary data and returns it. public static CalculatedDataModel CalculateAuxilliaryData(SensorDataModel sensorData) Parameters sensorData SensorDataModel The sensor data from which to calculate the auxillary data. Returns CalculatedDataModel The calculated data derived from the sensor data. GetSortSelector(SortMode) Takes a sorting mode and returns a selector to get the sort property. public static Func<DatasetModel, IComparable> GetSortSelector(SortMode mode) Parameters mode SortMode The sort mode corresponding to the desired selector. Returns Func<DatasetModel, IComparable> A selector function that gets the property specified by mode. LoadDataset(ILocation, ref ReactiveCell<DatasetModel>?) Loads a dataset from a location and adds it to the loaded datasets under the target location. public bool LoadDataset(ILocation target, ref ReactiveCell<DatasetModel>? model) Parameters target ILocation The location to load the dataset from. model ReactiveCell<DatasetModel> The variable to load a reference to the dataset into, only initialised if the return value was true. Returns bool True if the dataset was loaded successfully, false otherwise. SaveDataset(ILocation) Saves a dataset at a given location by writing it to its associated location. public bool SaveDataset(ILocation target) Parameters target ILocation The location associated to the dataset to be saved. Returns bool True if saving was successful, false if it failed. SaveDatasetAs(ILocation, ILocation) Saves a dataset associated to the source location to the destination location and reassigns the dataset to the destination location. public bool SaveDatasetAs(ILocation source, ILocation destination) Parameters source ILocation The location associated to the dataset to save. destination ILocation The location to save & reassign the dataset to. Returns bool True if the operation was successful, false if it failed. SearchDatasets(SortMode, string) Given a sorting mode and a string to search for, sorts the loaded datasets and performs a binary search to find a match. public int SearchDatasets(SortMode mode, string needle) Parameters mode SortMode The sort mode by which to order the datasets. needle string The string representation of the property to find. Returns int The index of the found dataset in the sorted representation, or -1 if no match was found."
  },
  "api/S4UDashboard.Model.DatasetModel.html": {
    "href": "api/S4UDashboard.Model.DatasetModel.html",
    "title": "Struct DatasetModel | Sensing4U Dashboard",
    "summary": "Struct DatasetModel Namespace S4UDashboard.Model Assembly S4UDashboard.dll Represents a dataset. Only AnnotatedData and SensorData should be serialised. public readonly record struct DatasetModel : IEquatable<DatasetModel> Implements IEquatable<DatasetModel> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties AnnotatedData public required AnnotatedDataModel AnnotatedData { get; init; } Property Value AnnotatedDataModel CalculatedData public required CalculatedDataModel CalculatedData { get; init; } Property Value CalculatedDataModel SensorData public required SensorDataModel SensorData { get; init; } Property Value SensorDataModel"
  },
  "api/S4UDashboard.Model.FBMProfile.html": {
    "href": "api/S4UDashboard.Model.FBMProfile.html",
    "title": "Struct FBMProfile | Sensing4U Dashboard",
    "summary": "Struct FBMProfile Namespace S4UDashboard.Model Assembly S4UDashboard.dll public readonly record struct FBMProfile : IEquatable<FBMProfile> Implements IEquatable<FBMProfile> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors FBMProfile(int, double, double, double, double, Func<double, double>) public FBMProfile(int Octaves, double Lacunarity, double Gain, double InitialAmplitude, double InitialFrequency, Func<double, double> NoiseFn) Parameters Octaves int Lacunarity double Gain double InitialAmplitude double InitialFrequency double NoiseFn Func<double, double> Properties Gain public double Gain { get; init; } Property Value double InitialAmplitude public double InitialAmplitude { get; init; } Property Value double InitialFrequency public double InitialFrequency { get; init; } Property Value double Lacunarity public double Lacunarity { get; init; } Property Value double NoiseFn public Func<double, double> NoiseFn { get; init; } Property Value Func<double, double> Octaves public int Octaves { get; init; } Property Value int"
  },
  "api/S4UDashboard.Model.FileLocation.html": {
    "href": "api/S4UDashboard.Model.FileLocation.html",
    "title": "Struct FileLocation | Sensing4U Dashboard",
    "summary": "Struct FileLocation Namespace S4UDashboard.Model Assembly S4UDashboard.dll public readonly record struct FileLocation : ILocation, IEquatable<FileLocation> Implements ILocation IEquatable<FileLocation> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors FileLocation(string) public FileLocation(string LocationPath) Parameters LocationPath string FileLocation(Uri) public FileLocation(Uri uri) Parameters uri Uri Properties IsPhysical public bool IsPhysical { get; } Property Value bool LocationHint public string LocationHint { get; } Property Value string LocationPath public string LocationPath { get; init; } Property Value string Methods OpenReadStream() public Stream OpenReadStream() Returns Stream OpenWriteStream() public Stream OpenWriteStream() Returns Stream"
  },
  "api/S4UDashboard.Model.GeneratorProfile.html": {
    "href": "api/S4UDashboard.Model.GeneratorProfile.html",
    "title": "Struct GeneratorProfile | Sensing4U Dashboard",
    "summary": "Struct GeneratorProfile Namespace S4UDashboard.Model Assembly S4UDashboard.dll public readonly record struct GeneratorProfile : IEquatable<GeneratorProfile> Implements IEquatable<GeneratorProfile> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors GeneratorProfile(ImmutableArray<string>, ImmutableArray<SensorProfile>) public GeneratorProfile(ImmutableArray<string> SensorNames, ImmutableArray<SensorProfile> SensorProfiles) Parameters SensorNames ImmutableArray<string> SensorProfiles ImmutableArray<SensorProfile> Properties SensorNames public ImmutableArray<string> SensorNames { get; init; } Property Value ImmutableArray<string> SensorProfiles public ImmutableArray<SensorProfile> SensorProfiles { get; init; } Property Value ImmutableArray<SensorProfile>"
  },
  "api/S4UDashboard.Model.ILocation.html": {
    "href": "api/S4UDashboard.Model.ILocation.html",
    "title": "Interface ILocation | Sensing4U Dashboard",
    "summary": "Interface ILocation Namespace S4UDashboard.Model Assembly S4UDashboard.dll public interface ILocation Properties IsPhysical bool IsPhysical { get; } Property Value bool LocationHint string LocationHint { get; } Property Value string Methods OpenReadStream() Stream OpenReadStream() Returns Stream OpenWriteStream() Stream OpenWriteStream() Returns Stream"
  },
  "api/S4UDashboard.Model.Immutable2DArray-1.html": {
    "href": "api/S4UDashboard.Model.Immutable2DArray-1.html",
    "title": "Struct Immutable2DArray<T> | Sensing4U Dashboard",
    "summary": "Struct Immutable2DArray<T> Namespace S4UDashboard.Model Assembly S4UDashboard.dll public readonly struct Immutable2DArray<T> : IEnumerable<IEnumerable<T>>, IEnumerable Type Parameters T Implements IEnumerable<IEnumerable<T>> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Immutable2DArray(IEnumerable<T>, int, int) public Immutable2DArray(IEnumerable<T> source, int rows, int columns) Parameters source IEnumerable<T> rows int columns int Fields Columns public readonly int Columns Field Value int Rows public readonly int Rows Field Value int Properties this[int, int] public T this[int row, int column] { get; } Parameters row int column int Property Value T Length public int Length { get; } Property Value int Methods EnumerateColumn(int) public IEnumerable<T> EnumerateColumn(int column) Parameters column int Returns IEnumerable<T> EnumerateFlat() public IEnumerable<T> EnumerateFlat() Returns IEnumerable<T> EnumerateRow(int) public IEnumerable<T> EnumerateRow(int row) Parameters row int Returns IEnumerable<T> GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<IEnumerable<T>> GetEnumerator() Returns IEnumerator<IEnumerable<T>> An enumerator that can be used to iterate through the collection."
  },
  "api/S4UDashboard.Model.SampleGenerator.html": {
    "href": "api/S4UDashboard.Model.SampleGenerator.html",
    "title": "Class SampleGenerator | Sensing4U Dashboard",
    "summary": "Class SampleGenerator Namespace S4UDashboard.Model Assembly S4UDashboard.dll public static class SampleGenerator Inheritance object SampleGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultProfile public static readonly GeneratorProfile DefaultProfile Field Value GeneratorProfile Methods GenerateSensorData(GeneratorProfile, int, int) public static SensorDataModel GenerateSensorData(GeneratorProfile profile, int sensorsCount, int samplesPerSensor) Parameters profile GeneratorProfile sensorsCount int samplesPerSensor int Returns SensorDataModel"
  },
  "api/S4UDashboard.Model.SensorDataModel.html": {
    "href": "api/S4UDashboard.Model.SensorDataModel.html",
    "title": "Struct SensorDataModel | Sensing4U Dashboard",
    "summary": "Struct SensorDataModel Namespace S4UDashboard.Model Assembly S4UDashboard.dll Represents the components of a dataset which should never be updated by the program. public readonly record struct SensorDataModel : IEquatable<SensorDataModel> Implements IEquatable<SensorDataModel> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties MeasurementIdentifier public required string MeasurementIdentifier { get; init; } Property Value string Samples public required Immutable2DArray<double> Samples { get; init; } Property Value Immutable2DArray<double> SensorNames public required ImmutableArray<string> SensorNames { get; init; } Property Value ImmutableArray<string>"
  },
  "api/S4UDashboard.Model.SensorProfile.html": {
    "href": "api/S4UDashboard.Model.SensorProfile.html",
    "title": "Struct SensorProfile | Sensing4U Dashboard",
    "summary": "Struct SensorProfile Namespace S4UDashboard.Model Assembly S4UDashboard.dll public readonly record struct SensorProfile : IEquatable<SensorProfile> Implements IEquatable<SensorProfile> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors SensorProfile(string, FBMProfile) public SensorProfile(string MeasurementIdentifier, FBMProfile NoiseProfile) Parameters MeasurementIdentifier string NoiseProfile FBMProfile Properties MeasurementIdentifier public string MeasurementIdentifier { get; init; } Property Value string NoiseProfile public FBMProfile NoiseProfile { get; init; } Property Value FBMProfile"
  },
  "api/S4UDashboard.Model.Serialization.html": {
    "href": "api/S4UDashboard.Model.Serialization.html",
    "title": "Class Serialization | Sensing4U Dashboard",
    "summary": "Class Serialization Namespace S4UDashboard.Model Assembly S4UDashboard.dll public static class Serialization Inheritance object Serialization Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReadEnumerable<T>(BinaryReader, Func<BinaryReader, T>) public static IEnumerable<T> ReadEnumerable<T>(this BinaryReader reader, Func<BinaryReader, T> deserializer) Parameters reader BinaryReader deserializer Func<BinaryReader, T> Returns IEnumerable<T> Type Parameters T ReadOptionalValue<T>(BinaryReader, Func<BinaryReader, T>) public static T? ReadOptionalValue<T>(this BinaryReader reader, Func<BinaryReader, T> deserializer) where T : struct Parameters reader BinaryReader deserializer Func<BinaryReader, T> Returns T? Type Parameters T ReadOptional<T>(BinaryReader, Func<BinaryReader, T>) public static T? ReadOptional<T>(this BinaryReader reader, Func<BinaryReader, T> deserializer) where T : class Parameters reader BinaryReader deserializer Func<BinaryReader, T> Returns T Type Parameters T ReadRawEnumerable<T>(BinaryReader, Func<BinaryReader, T>, int) public static IEnumerable<T> ReadRawEnumerable<T>(this BinaryReader reader, Func<BinaryReader, T> deserializer, int length) Parameters reader BinaryReader deserializer Func<BinaryReader, T> length int Returns IEnumerable<T> Type Parameters T Read<T>(BinaryReader, Func<BinaryReader, T>) public static T Read<T>(this BinaryReader reader, Func<BinaryReader, T> deserializer) Parameters reader BinaryReader deserializer Func<BinaryReader, T> Returns T Type Parameters T WriteEnumerable<T>(BinaryWriter, Action<BinaryWriter, T>, IEnumerable<T>) public static void WriteEnumerable<T>(this BinaryWriter writer, Action<BinaryWriter, T> serializer, IEnumerable<T> series) Parameters writer BinaryWriter serializer Action<BinaryWriter, T> series IEnumerable<T> Type Parameters T WriteOptionalValue<T>(BinaryWriter, Action<BinaryWriter, T>, T?) public static void WriteOptionalValue<T>(this BinaryWriter writer, Action<BinaryWriter, T> serializer, T? value) where T : struct Parameters writer BinaryWriter serializer Action<BinaryWriter, T> value T? Type Parameters T WriteOptional<T>(BinaryWriter, Action<BinaryWriter, T>, T?) public static void WriteOptional<T>(this BinaryWriter writer, Action<BinaryWriter, T> serializer, T? value) where T : class Parameters writer BinaryWriter serializer Action<BinaryWriter, T> value T Type Parameters T WriteRawEnumerable<T>(BinaryWriter, Action<BinaryWriter, T>, IEnumerable<T>) public static void WriteRawEnumerable<T>(this BinaryWriter writer, Action<BinaryWriter, T> serializer, IEnumerable<T> series) Parameters writer BinaryWriter serializer Action<BinaryWriter, T> series IEnumerable<T> Type Parameters T Write<T>(BinaryWriter, Action<BinaryWriter, T>, T) public static void Write<T>(this BinaryWriter writer, Action<BinaryWriter, T> serializer, T value) Parameters writer BinaryWriter serializer Action<BinaryWriter, T> value T Type Parameters T"
  },
  "api/S4UDashboard.Model.Serializers.html": {
    "href": "api/S4UDashboard.Model.Serializers.html",
    "title": "Class Serializers | Sensing4U Dashboard",
    "summary": "Class Serializers Namespace S4UDashboard.Model Assembly S4UDashboard.dll public static class Serializers Inheritance object Serializers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AnnotatedDataDeserializer public static readonly Func<BinaryReader, AnnotatedDataModel> AnnotatedDataDeserializer Field Value Func<BinaryReader, AnnotatedDataModel> AnnotatedDataSerializer public static readonly Action<BinaryWriter, AnnotatedDataModel> AnnotatedDataSerializer Field Value Action<BinaryWriter, AnnotatedDataModel> DatasetDeserializer public static readonly Func<BinaryReader, DatasetModel> DatasetDeserializer Field Value Func<BinaryReader, DatasetModel> DatasetSerializer public static readonly Action<BinaryWriter, DatasetModel> DatasetSerializer Field Value Action<BinaryWriter, DatasetModel> LatestFormatVersion public static readonly int LatestFormatVersion Field Value int MagicSignature public static readonly int MagicSignature Field Value int SensorDataDeserializer public static readonly Func<BinaryReader, SensorDataModel> SensorDataDeserializer Field Value Func<BinaryReader, SensorDataModel> SensorDataSerializer public static readonly Action<BinaryWriter, SensorDataModel> SensorDataSerializer Field Value Action<BinaryWriter, SensorDataModel>"
  },
  "api/S4UDashboard.Model.SortMode.html": {
    "href": "api/S4UDashboard.Model.SortMode.html",
    "title": "Enum SortMode | Sensing4U Dashboard",
    "summary": "Enum SortMode Namespace S4UDashboard.Model Assembly S4UDashboard.dll public enum SortMode Fields Maximum = 5 Mean = 3 Measurement = 2 Minimum = 4 Name = 1 Unsorted = 0"
  },
  "api/S4UDashboard.Model.SortedObservableView-1.html": {
    "href": "api/S4UDashboard.Model.SortedObservableView-1.html",
    "title": "Class SortedObservableView<T> | Sensing4U Dashboard",
    "summary": "Class SortedObservableView<T> Namespace S4UDashboard.Model Assembly S4UDashboard.dll public class SortedObservableView<T> : INotifyPropertyChanged, INotifyCollectionChanged, IList<T>, ICollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable Type Parameters T Inheritance object SortedObservableView<T> Implements INotifyPropertyChanged INotifyCollectionChanged IList<T> ICollection<T> IEnumerable<T> IList ICollection IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SortedObservableView(List<T>) public SortedObservableView(List<T> source) Parameters source List<T> Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsFixedSize Gets a value indicating whether the IList has a fixed size. public bool IsFixedSize { get; } Property Value bool true if the IList has a fixed size; otherwise, false. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. IsSynchronized Gets a value indicating whether access to the ICollection is synchronized (thread safe). public bool IsSynchronized { get; } Property Value bool true if access to the ICollection is synchronized (thread safe); otherwise, false. this[int] public T this[int index] { get; } Parameters index int Property Value T Order public IReadOnlyList<int>? Order { get; } Property Value IReadOnlyList<int> Selector public Func<T, IComparable>? Selector { get; set; } Property Value Func<T, IComparable> SyncRoot Gets an object that can be used to synchronize access to the ICollection. public object SyncRoot { get; } Property Value object An object that can be used to synchronize access to the ICollection. Methods Add(object?) Adds an item to the IList. public int Add(object? value) Parameters value object The object to add to the IList. Returns int The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection. Exceptions NotSupportedException The IList is read-only. -or- The IList has a fixed size. Add(T) Adds an item to the ICollection<T>. public void Add(T item) Parameters item T The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(object?) Determines whether the IList contains a specific value. public bool Contains(object? value) Parameters value object The object to locate in the IList. Returns bool true if the object is found in the IList; otherwise, false. Contains(T) Determines whether the ICollection<T> contains a specific value. public bool Contains(T item) Parameters item T The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Array, int) Copies the elements of the ICollection to an Array, starting at a particular Array index. public void CopyTo(Array array, int index) Parameters array Array The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing. index int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException index is less than zero. ArgumentException <code class=\"paramref\">array</code> is multidimensional. -or- The number of elements in the source ICollection is greater than the available space from index to the end of the destination array. -or- The type of the source ICollection cannot be cast automatically to the type of the destination array. CopyTo(T[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(T[] array, int arrayIndex) Parameters array T[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> An enumerator that can be used to iterate through the collection. Impose() public void Impose() IndexOf(object?) Determines the index of a specific item in the IList. public int IndexOf(object? value) Parameters value object The object to locate in the IList. Returns int The index of value if found in the list; otherwise, -1. IndexOf(T) Determines the index of a specific item in the IList<T>. public int IndexOf(T item) Parameters item T The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, object?) Inserts an item to the IList at the specified index. public void Insert(int index, object? value) Parameters index int The zero-based index at which value should be inserted. value object The object to insert into the IList. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList. NotSupportedException The IList is read-only. -or- The IList has a fixed size. NullReferenceException value is null reference in the IList. Insert(int, T) Inserts an item to the IList<T> at the specified index. public void Insert(int index, T item) Parameters index int The zero-based index at which item should be inserted. item T The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(object?) Removes the first occurrence of a specific object from the IList. public void Remove(object? value) Parameters value object The object to remove from the IList. Exceptions NotSupportedException The IList is read-only. -or- The IList has a fixed size. Remove(T) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(T item) Parameters item T The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Events CollectionChanged Occurs when the collection changes. public event NotifyCollectionChangedEventHandler? CollectionChanged Event Type NotifyCollectionChangedEventHandler PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/S4UDashboard.Model.UnnamedLocation.html": {
    "href": "api/S4UDashboard.Model.UnnamedLocation.html",
    "title": "Class UnnamedLocation | Sensing4U Dashboard",
    "summary": "Class UnnamedLocation Namespace S4UDashboard.Model Assembly S4UDashboard.dll public class UnnamedLocation : ILocation Inheritance object UnnamedLocation Implements ILocation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsPhysical public bool IsPhysical { get; } Property Value bool LocationHint public string LocationHint { get; } Property Value string Methods OpenReadStream() public Stream OpenReadStream() Returns Stream OpenWriteStream() public Stream OpenWriteStream() Returns Stream"
  },
  "api/S4UDashboard.Model.html": {
    "href": "api/S4UDashboard.Model.html",
    "title": "Namespace S4UDashboard.Model | Sensing4U Dashboard",
    "summary": "Namespace S4UDashboard.Model Classes DataProcessing SampleGenerator Serialization Serializers SortedObservableView<T> UnnamedLocation Structs AnnotatedDataModel Represents the components of a dataset which may be updated by the program. CalculatedDataModel Represents the components of a dataset which can be derived from the sensor data. DatasetModel Represents a dataset. Only AnnotatedData and SensorData should be serialised. FBMProfile FileLocation GeneratorProfile Immutable2DArray<T> SensorDataModel Represents the components of a dataset which should never be updated by the program. SensorProfile Interfaces ILocation Enums SortMode"
  },
  "api/S4UDashboard.Reactive.ComputedCell-1.html": {
    "href": "api/S4UDashboard.Reactive.ComputedCell-1.html",
    "title": "Class ComputedCell<T> | Sensing4U Dashboard",
    "summary": "Class ComputedCell<T> Namespace S4UDashboard.Reactive Assembly S4UDashboard.dll public class ComputedCell<T> : INotifyPropertyChanged Type Parameters T Inheritance object ComputedCell<T> Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ComputedCell(Func<T>) public ComputedCell(Func<T> update) Parameters update Func<T> Properties Value public T Value { get; } Property Value T Events PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/S4UDashboard.Reactive.EffectManager.html": {
    "href": "api/S4UDashboard.Reactive.EffectManager.html",
    "title": "Class EffectManager | Sensing4U Dashboard",
    "summary": "Class EffectManager Namespace S4UDashboard.Reactive Assembly S4UDashboard.dll Manages an effects based reactivity system. This interface is heavily inspired by Vue 3's fundamental reactivity primitive, which tracks access to reactive dependencies and executes subscribed effects when that dependency is triggered (usually when the property is mutated). public static class EffectManager Inheritance object EffectManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GapEffectTracking(Action) Makes it such that there is no active effect at the start of scope. This is used for preventing cycles when a reactive object may interact with something that may access that object (or a dependent object) but should not enact a dependency on the object (since this would cause a cycle). public static void GapEffectTracking(Action scope) Parameters scope Action ShimPropertyChanged(INotifyPropertyChanged) Causes a trigger on an object that implements INotifyPropertyChanged when the event is raised. public static void ShimPropertyChanged(INotifyPropertyChanged source) Parameters source INotifyPropertyChanged Track(object, string) Subscribes the active effect to the specified dependency. If called when an effect is active and not null, this will subscribe that effect to the specified dependency. The effect will then be executed when the dependency is triggered. public static void Track(object target, string key) Parameters target object key string Trigger(object, string) Triggers all effects subscribed to the specified dependency. Executes all effects that were previously subscribed to the specified dependency. Further dependencies may be subscribed to within the effect invocation if tracking is not paused. public static void Trigger(object target, string key) Parameters target object key string Watch(Action, Action) Watches a source and executes an effect when it is triggered. public static void Watch(Action source, Action effect) Parameters source Action effect Action Watch(Delegate[], Delegate) Watches an array of sources an executes an effect when they are triggered. The sources and effect are untyped delegates, and as such the caller must take care that the parameters of the effect match the values returned by the sources. public static void Watch(Delegate[] sources, Delegate effect) Parameters sources Delegate[] effect Delegate WatchEffect(Action) Executes an effect immediately and subscribes it to all accessed dependencies. Sets the active effect to the passed function and then executes it. This lets the EffectManager track the function's dependencies and subscribe to them, re-running the function when they are triggered. public static void WatchEffect(Action update) Parameters update Action Watch<T>(Func<T>, Action<T>) Watches a source and executes an effect passing the result of the source when it is triggered. public static void Watch<T>(Func<T> source, Action<T> effect) Parameters source Func<T> effect Action<T> Type Parameters T See Also https://vuejs.org/guide/extras/reactivity-in-depth.html"
  },
  "api/S4UDashboard.Reactive.ReactiveCell-1.html": {
    "href": "api/S4UDashboard.Reactive.ReactiveCell-1.html",
    "title": "Class ReactiveCell<T> | Sensing4U Dashboard",
    "summary": "Class ReactiveCell<T> Namespace S4UDashboard.Reactive Assembly S4UDashboard.dll public class ReactiveCell<T> : INotifyPropertyChanged Type Parameters T Inheritance object ReactiveCell<T> Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReactiveCell(T) public ReactiveCell(T inner) Parameters inner T Properties Value public T Value { get; set; } Property Value T Events PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/S4UDashboard.Reactive.ReactiveCommand.html": {
    "href": "api/S4UDashboard.Reactive.ReactiveCommand.html",
    "title": "Class ReactiveCommand | Sensing4U Dashboard",
    "summary": "Class ReactiveCommand Namespace S4UDashboard.Reactive Assembly S4UDashboard.dll public class ReactiveCommand : ICommand Inheritance object ReactiveCommand Implements ICommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReactiveCommand(Func<bool>, Action<object?>) public ReactiveCommand(Func<bool> canExecute, Action<object?> execute) Parameters canExecute Func<bool> execute Action<object> ReactiveCommand(Func<bool>, Func<object?, Task>) public ReactiveCommand(Func<bool> canExecute, Func<object?, Task> execute) Parameters canExecute Func<bool> execute Func<object, Task> Methods CanExecute(object?) Defines the method that determines whether the command can execute in its current state. public bool CanExecute(object? parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object?) Defines the method to be called when the command is invoked. public void Execute(object? parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. public event EventHandler? CanExecuteChanged Event Type EventHandler"
  },
  "api/S4UDashboard.Reactive.html": {
    "href": "api/S4UDashboard.Reactive.html",
    "title": "Namespace S4UDashboard.Reactive | Sensing4U Dashboard",
    "summary": "Namespace S4UDashboard.Reactive Classes ComputedCell<T> EffectManager Manages an effects based reactivity system. This interface is heavily inspired by Vue 3's fundamental reactivity primitive, which tracks access to reactive dependencies and executes subscribed effects when that dependency is triggered (usually when the property is mutated). ReactiveCell<T> ReactiveCommand"
  },
  "api/S4UDashboard.ServiceProvider.html": {
    "href": "api/S4UDashboard.ServiceProvider.html",
    "title": "Class ServiceProvider | Sensing4U Dashboard",
    "summary": "Class ServiceProvider Namespace S4UDashboard Assembly S4UDashboard.dll public static class ServiceProvider Inheritance object ServiceProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddService<T>(T) public static void AddService<T>(T service) where T : class Parameters service T Type Parameters T ExpectService<T>() public static T ExpectService<T>() where T : class Returns T Type Parameters T GetService<T>() public static T? GetService<T>() where T : class Returns T Type Parameters T"
  },
  "api/S4UDashboard.ViewModels.FileTabViewModel.html": {
    "href": "api/S4UDashboard.ViewModels.FileTabViewModel.html",
    "title": "Class FileTabViewModel | Sensing4U Dashboard",
    "summary": "Class FileTabViewModel Namespace S4UDashboard.ViewModels Assembly S4UDashboard.dll public class FileTabViewModel : ViewModelBase Inheritance object ViewModelBase FileTabViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileTabViewModel(ReactiveCell<DatasetModel>, ILocation) public FileTabViewModel(ReactiveCell<DatasetModel> dataset, ILocation location) Parameters dataset ReactiveCell<DatasetModel> location ILocation Fields SDSFileType public static readonly FilePickerFileType SDSFileType Field Value FilePickerFileType Properties ClearAnnotatedName public ReactiveCommand ClearAnnotatedName { get; } Property Value ReactiveCommand Dataset public ReactiveCell<DatasetModel> Dataset { get; } Property Value ReactiveCell<DatasetModel> Dirty public ReactiveCell<bool> Dirty { get; } Property Value ReactiveCell<bool> GridSource public FlatTreeDataGridSource<IEnumerable<double>> GridSource { get; } Property Value FlatTreeDataGridSource<IEnumerable<double>> Header public ComputedCell<string> Header { get; } Property Value ComputedCell<string> Location public ReactiveCell<ILocation> Location { get; } Property Value ReactiveCell<ILocation> LowerField public ReactiveCell<double?> LowerField { get; } Property Value ReactiveCell<double?> NameField public ReactiveCell<string> NameField { get; } Property Value ReactiveCell<string> UpdateAnnotatedName public ReactiveCommand UpdateAnnotatedName { get; } Property Value ReactiveCommand UpperField public ReactiveCell<double?> UpperField { get; } Property Value ReactiveCell<double?> VisualiseCells public ReactiveCell<bool> VisualiseCells { get; } Property Value ReactiveCell<bool> Methods FromLocation(ILocation) public static FileTabViewModel? FromLocation(ILocation location) Parameters location ILocation Returns FileTabViewModel SaveAs() public Task<bool> SaveAs() Returns Task<bool> SaveCurrent() public Task<bool> SaveCurrent() Returns Task<bool>"
  },
  "api/S4UDashboard.ViewModels.MainViewModel.html": {
    "href": "api/S4UDashboard.ViewModels.MainViewModel.html",
    "title": "Class MainViewModel | Sensing4U Dashboard",
    "summary": "Class MainViewModel Namespace S4UDashboard.ViewModels Assembly S4UDashboard.dll public class MainViewModel : ViewModelBase Inheritance object ViewModelBase MainViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MainViewModel() public MainViewModel() Properties AboutAlert public ReactiveCommand AboutAlert { get; } Property Value ReactiveCommand CloseSelectedTab public ReactiveCommand CloseSelectedTab { get; } Property Value ReactiveCommand CloseTabCommand public ReactiveCommand CloseTabCommand { get; } Property Value ReactiveCommand GoNextTab public ReactiveCommand GoNextTab { get; } Property Value ReactiveCommand GoPrevTab public ReactiveCommand GoPrevTab { get; } Property Value ReactiveCommand OpenWiki public ReactiveCommand OpenWiki { get; } Property Value ReactiveCommand QuitApp public ReactiveCommand QuitApp { get; } Property Value ReactiveCommand SaveAll public ReactiveCommand SaveAll { get; } Property Value ReactiveCommand SaveAsDialog public ReactiveCommand SaveAsDialog { get; } Property Value ReactiveCommand SaveCurrent public ReactiveCommand SaveCurrent { get; } Property Value ReactiveCommand SearchTabs public ReactiveCommand SearchTabs { get; } Property Value ReactiveCommand SearchText public ReactiveCell<string> SearchText { get; } Property Value ReactiveCell<string> SelectedTab public ReactiveCell<FileTabViewModel?> SelectedTab { get; } Property Value ReactiveCell<FileTabViewModel> SelectedTabIndex public ReactiveCell<int> SelectedTabIndex { get; } Property Value ReactiveCell<int> TabList public SortedObservableView<FileTabViewModel> TabList { get; } Property Value SortedObservableView<FileTabViewModel> TabsAreSorted public ComputedCell<bool> TabsAreSorted { get; } Property Value ComputedCell<bool> TabsSortMode public ReactiveCell<SortMode> TabsSortMode { get; } Property Value ReactiveCell<SortMode> Methods GenerateSample() public void GenerateSample() OpenFileDialog() public void OpenFileDialog()"
  },
  "api/S4UDashboard.ViewModels.ViewModelBase.html": {
    "href": "api/S4UDashboard.ViewModels.ViewModelBase.html",
    "title": "Class ViewModelBase | Sensing4U Dashboard",
    "summary": "Class ViewModelBase Namespace S4UDashboard.ViewModels Assembly S4UDashboard.dll public abstract class ViewModelBase Inheritance object ViewModelBase Derived FileTabViewModel MainViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/S4UDashboard.ViewModels.html": {
    "href": "api/S4UDashboard.ViewModels.html",
    "title": "Namespace S4UDashboard.ViewModels | Sensing4U Dashboard",
    "summary": "Namespace S4UDashboard.ViewModels Classes FileTabViewModel MainViewModel ViewModelBase"
  },
  "api/S4UDashboard.Views.FileTabView.html": {
    "href": "api/S4UDashboard.Views.FileTabView.html",
    "title": "Class FileTabView | Sensing4U Dashboard",
    "summary": "Class FileTabView Namespace S4UDashboard.Views Assembly S4UDashboard.dll public class FileTabView : UserControl, INotifyPropertyChanged, IDataContextProvider, ILogical, IThemeVariantHost, IResourceHost, IResourceNode, IStyleHost, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, INamed, IInputElement, IDataTemplateHost, ISetterValue Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control TemplatedControl ContentControl UserControl FileTabView Implements INotifyPropertyChanged IDataContextProvider ILogical IThemeVariantHost IResourceHost IResourceNode IStyleHost ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable INamed IInputElement IDataTemplateHost ISetterValue Inherited Members ContentControl.ContentProperty ContentControl.ContentTemplateProperty ContentControl.HorizontalContentAlignmentProperty ContentControl.VerticalContentAlignmentProperty ContentControl.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) ContentControl.RegisterContentPresenter(ContentPresenter) ContentControl.Content ContentControl.ContentTemplate ContentControl.Presenter ContentControl.HorizontalContentAlignment ContentControl.VerticalContentAlignment TemplatedControl.BackgroundProperty TemplatedControl.BackgroundSizingProperty TemplatedControl.BorderBrushProperty TemplatedControl.BorderThicknessProperty TemplatedControl.CornerRadiusProperty TemplatedControl.FontFamilyProperty TemplatedControl.FontFeaturesProperty TemplatedControl.FontSizeProperty TemplatedControl.FontStyleProperty TemplatedControl.FontWeightProperty TemplatedControl.FontStretchProperty TemplatedControl.ForegroundProperty TemplatedControl.PaddingProperty TemplatedControl.TemplateProperty TemplatedControl.IsTemplateFocusTargetProperty TemplatedControl.TemplateAppliedEvent TemplatedControl.GetIsTemplateFocusTarget(Control) TemplatedControl.SetIsTemplateFocusTarget(Control, bool) TemplatedControl.ApplyTemplate() TemplatedControl.GetTemplateFocusTarget() TemplatedControl.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnApplyTemplate(TemplateAppliedEventArgs) TemplatedControl.OnTemplateChanged(AvaloniaPropertyChangedEventArgs) TemplatedControl.Background TemplatedControl.BackgroundSizing TemplatedControl.BorderBrush TemplatedControl.BorderThickness TemplatedControl.CornerRadius TemplatedControl.FontFamily TemplatedControl.FontFeatures TemplatedControl.FontSize TemplatedControl.FontStyle TemplatedControl.FontWeight TemplatedControl.FontStretch TemplatedControl.Foreground TemplatedControl.Padding TemplatedControl.Template TemplatedControl.TemplateApplied Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnCreateAutomationPeer() Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnKeyDown(KeyEventArgs) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.MeasureCore(Size) Layoutable.MeasureOverride(Size) Layoutable.ArrangeCore(Rect) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.Render(DrawingContext) Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.InvalidateMirrorTransform() Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.BypassFlowDirectionPolicies Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.StyleKeyOverride StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IBinding) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] AvaloniaObject.PropertyChanged object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileTabView() public FileTabView() Methods InitializeComponent(bool) Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced). public void InitializeComponent(bool loadXaml = true) Parameters loadXaml bool Should the XAML be loaded into the component."
  },
  "api/S4UDashboard.Views.MainView.html": {
    "href": "api/S4UDashboard.Views.MainView.html",
    "title": "Class MainView | Sensing4U Dashboard",
    "summary": "Class MainView Namespace S4UDashboard.Views Assembly S4UDashboard.dll public class MainView : UserControl, INotifyPropertyChanged, IDataContextProvider, ILogical, IThemeVariantHost, IResourceHost, IResourceNode, IStyleHost, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, INamed, IInputElement, IDataTemplateHost, ISetterValue Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control TemplatedControl ContentControl UserControl MainView Implements INotifyPropertyChanged IDataContextProvider ILogical IThemeVariantHost IResourceHost IResourceNode IStyleHost ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable INamed IInputElement IDataTemplateHost ISetterValue Inherited Members ContentControl.ContentProperty ContentControl.ContentTemplateProperty ContentControl.HorizontalContentAlignmentProperty ContentControl.VerticalContentAlignmentProperty ContentControl.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) ContentControl.RegisterContentPresenter(ContentPresenter) ContentControl.Content ContentControl.ContentTemplate ContentControl.Presenter ContentControl.HorizontalContentAlignment ContentControl.VerticalContentAlignment TemplatedControl.BackgroundProperty TemplatedControl.BackgroundSizingProperty TemplatedControl.BorderBrushProperty TemplatedControl.BorderThicknessProperty TemplatedControl.CornerRadiusProperty TemplatedControl.FontFamilyProperty TemplatedControl.FontFeaturesProperty TemplatedControl.FontSizeProperty TemplatedControl.FontStyleProperty TemplatedControl.FontWeightProperty TemplatedControl.FontStretchProperty TemplatedControl.ForegroundProperty TemplatedControl.PaddingProperty TemplatedControl.TemplateProperty TemplatedControl.IsTemplateFocusTargetProperty TemplatedControl.TemplateAppliedEvent TemplatedControl.GetIsTemplateFocusTarget(Control) TemplatedControl.SetIsTemplateFocusTarget(Control, bool) TemplatedControl.ApplyTemplate() TemplatedControl.GetTemplateFocusTarget() TemplatedControl.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnApplyTemplate(TemplateAppliedEventArgs) TemplatedControl.OnTemplateChanged(AvaloniaPropertyChangedEventArgs) TemplatedControl.Background TemplatedControl.BackgroundSizing TemplatedControl.BorderBrush TemplatedControl.BorderThickness TemplatedControl.CornerRadius TemplatedControl.FontFamily TemplatedControl.FontFeatures TemplatedControl.FontSize TemplatedControl.FontStyle TemplatedControl.FontWeight TemplatedControl.FontStretch TemplatedControl.Foreground TemplatedControl.Padding TemplatedControl.Template TemplatedControl.TemplateApplied Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnCreateAutomationPeer() Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnKeyDown(KeyEventArgs) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.MeasureCore(Size) Layoutable.MeasureOverride(Size) Layoutable.ArrangeCore(Rect) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.Render(DrawingContext) Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.InvalidateMirrorTransform() Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.BypassFlowDirectionPolicies Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.StyleKeyOverride StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IBinding) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] AvaloniaObject.PropertyChanged object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MainView() public MainView() Methods InitializeComponent(bool) Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced). public void InitializeComponent(bool loadXaml = true) Parameters loadXaml bool Should the XAML be loaded into the component."
  },
  "api/S4UDashboard.Views.MainWindow.html": {
    "href": "api/S4UDashboard.Views.MainWindow.html",
    "title": "Class MainWindow | Sensing4U Dashboard",
    "summary": "Class MainWindow Namespace S4UDashboard.Views Assembly S4UDashboard.dll public class MainWindow : Window, INotifyPropertyChanged, IDataContextProvider, IThemeVariantHost, IResourceHost, IResourceNode, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, INamed, IDataTemplateHost, ISetterValue, IRenderRoot, ICloseable, IStyleHost, ILogicalRoot, ILogical, ITextInputMethodRoot, IInputRoot, IInputElement, IFocusScope, ILayoutRoot Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control TemplatedControl ContentControl TopLevel WindowBase Window MainWindow Implements INotifyPropertyChanged IDataContextProvider IThemeVariantHost IResourceHost IResourceNode ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable INamed IDataTemplateHost ISetterValue IRenderRoot ICloseable IStyleHost ILogicalRoot ILogical ITextInputMethodRoot IInputRoot IInputElement IFocusScope ILayoutRoot Inherited Members Window.SizeToContentProperty Window.ExtendClientAreaToDecorationsHintProperty Window.ExtendClientAreaChromeHintsProperty Window.ExtendClientAreaTitleBarHeightHintProperty Window.IsExtendedIntoWindowDecorationsProperty Window.WindowDecorationMarginProperty Window.OffScreenMarginProperty Window.SystemDecorationsProperty Window.ShowActivatedProperty Window.ShowInTaskbarProperty Window.ClosingBehaviorProperty Window.WindowStateProperty Window.TitleProperty Window.IconProperty Window.WindowStartupLocationProperty Window.CanResizeProperty Window.WindowClosedEvent Window.WindowOpenedEvent Window.BeginMoveDrag(PointerPressedEventArgs) Window.BeginResizeDrag(WindowEdge, PointerPressedEventArgs) Window.Close() Window.Close(object) Window.ExtendClientAreaToDecorationsChanged(bool) Window.Hide() Window.Show() Window.IsVisibleChanged(AvaloniaPropertyChangedEventArgs) Window.Show(Window) Window.ShowDialog(Window) Window.ShowDialog<TResult>(Window) Window.SortWindowsByZOrder(Window[]) Window.MeasureOverride(Size) Window.ArrangeSetBounds(Size) Window.OnClosing(WindowClosingEventArgs) Window.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) Window.OnCreateAutomationPeer() Window.PlatformImpl Window.OwnedWindows Window.SizeToContent Window.Title Window.ExtendClientAreaToDecorationsHint Window.ExtendClientAreaChromeHints Window.ExtendClientAreaTitleBarHeightHint Window.IsExtendedIntoWindowDecorations Window.WindowDecorationMargin Window.OffScreenMargin Window.SystemDecorations Window.ShowActivated Window.ShowInTaskbar Window.ClosingBehavior Window.WindowState Window.CanResize Window.Icon Window.WindowStartupLocation Window.Position Window.StyleKeyOverride Window.Closing WindowBase.IsActiveProperty WindowBase.OwnerProperty WindowBase.TopmostProperty WindowBase.Activate() WindowBase.EnsureInitialized() WindowBase.OnClosed(EventArgs) WindowBase.OnOpened(EventArgs) WindowBase.OnResized(WindowResizedEventArgs) WindowBase.MeasureCore(Size) WindowBase.ArrangeCore(Rect) WindowBase.IgnoreVisibilityChanges WindowBase.IsActive WindowBase.Screens WindowBase.Owner WindowBase.Topmost WindowBase.DesktopScaling WindowBase.Activated WindowBase.Deactivated WindowBase.PositionChanged WindowBase.Resized TopLevel.ClientSizeProperty TopLevel.FrameSizeProperty TopLevel.PointerOverElementProperty TopLevel.TransparencyLevelHintProperty TopLevel.ActualTransparencyLevelProperty TopLevel.TransparencyBackgroundFallbackProperty TopLevel.ActualThemeVariantProperty TopLevel.RequestedThemeVariantProperty TopLevel.SystemBarColorProperty TopLevel.AutoSafeAreaPaddingProperty TopLevel.BackRequestedEvent TopLevel.TryGetPlatformHandle() TopLevel.SetSystemBarColor(Control, SolidColorBrush) TopLevel.GetSystemBarColor(Control) TopLevel.SetAutoSafeAreaPadding(Control, bool) TopLevel.GetAutoSafeAreaPadding(Control) TopLevel.GetTopLevel(Visual) TopLevel.RequestPlatformInhibition(PlatformInhibitionType, string) TopLevel.RequestAnimationFrame(Action<TimeSpan>) TopLevel.StartRendering() TopLevel.StopRendering() TopLevel.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) TopLevel.OnApplyTemplate(TemplateAppliedEventArgs) TopLevel.InvalidateMirrorTransform() TopLevel.ClientSize TopLevel.FrameSize TopLevel.TransparencyLevelHint TopLevel.ActualTransparencyLevel TopLevel.TransparencyBackgroundFallback TopLevel.RequestedThemeVariant TopLevel.RendererDiagnostics TopLevel.RenderScaling TopLevel.StorageProvider TopLevel.InsetsManager TopLevel.InputPane TopLevel.Launcher TopLevel.Clipboard TopLevel.FocusManager TopLevel.PlatformSettings TopLevel.BypassFlowDirectionPolicies TopLevel.Opened TopLevel.Closed TopLevel.ScalingChanged TopLevel.BackRequested ContentControl.ContentProperty ContentControl.ContentTemplateProperty ContentControl.HorizontalContentAlignmentProperty ContentControl.VerticalContentAlignmentProperty ContentControl.RegisterContentPresenter(ContentPresenter) ContentControl.Content ContentControl.ContentTemplate ContentControl.Presenter ContentControl.HorizontalContentAlignment ContentControl.VerticalContentAlignment TemplatedControl.BackgroundProperty TemplatedControl.BackgroundSizingProperty TemplatedControl.BorderBrushProperty TemplatedControl.BorderThicknessProperty TemplatedControl.CornerRadiusProperty TemplatedControl.FontFamilyProperty TemplatedControl.FontFeaturesProperty TemplatedControl.FontSizeProperty TemplatedControl.FontStyleProperty TemplatedControl.FontWeightProperty TemplatedControl.FontStretchProperty TemplatedControl.ForegroundProperty TemplatedControl.PaddingProperty TemplatedControl.TemplateProperty TemplatedControl.IsTemplateFocusTargetProperty TemplatedControl.TemplateAppliedEvent TemplatedControl.GetIsTemplateFocusTarget(Control) TemplatedControl.SetIsTemplateFocusTarget(Control, bool) TemplatedControl.ApplyTemplate() TemplatedControl.GetTemplateFocusTarget() TemplatedControl.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnTemplateChanged(AvaloniaPropertyChangedEventArgs) TemplatedControl.Background TemplatedControl.BackgroundSizing TemplatedControl.BorderBrush TemplatedControl.BorderThickness TemplatedControl.CornerRadius TemplatedControl.FontFamily TemplatedControl.FontFeatures TemplatedControl.FontSize TemplatedControl.FontStyle TemplatedControl.FontWeight TemplatedControl.FontStretch TemplatedControl.Foreground TemplatedControl.Padding TemplatedControl.Template TemplatedControl.TemplateApplied Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnKeyDown(KeyEventArgs) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.Render(DrawingContext) Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IBinding) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] AvaloniaObject.PropertyChanged object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MainWindow() public MainWindow() Methods InitializeComponent(bool, bool) Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced). public void InitializeComponent(bool loadXaml = true, bool attachDevTools = true) Parameters loadXaml bool Should the XAML be loaded into the component. attachDevTools bool Should the dev tools be attached."
  },
  "api/S4UDashboard.Views.html": {
    "href": "api/S4UDashboard.Views.html",
    "title": "Namespace S4UDashboard.Views | Sensing4U Dashboard",
    "summary": "Namespace S4UDashboard.Views Classes FileTabView MainView MainWindow"
  },
  "api/S4UDashboard.html": {
    "href": "api/S4UDashboard.html",
    "title": "Namespace S4UDashboard | Sensing4U Dashboard",
    "summary": "Namespace S4UDashboard Classes AlertService App ServiceProvider"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Sensing4U Dashboard",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "manual/introduction.html": {
    "href": "manual/introduction.html",
    "title": "Sensing4U Dashboard | Sensing4U Dashboard",
    "summary": "Sensing4U Dashboard Hello, World!"
  }
}